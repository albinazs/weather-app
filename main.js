(()=>{"use strict";class t{static capitalise(t){return t.charAt(0).toUpperCase()+t.slice(1)}static getTemp(t){return Math.round(t)+"℃"}static getFeels(t){return"Feels like "+Math.round(t)+"℃"}static getWind(t){return"Wind: "+Math.round(10*t)/10+"m/s"}static getHumidity(t){return"Humidity: "+Math.round(t)+"%"}}const e=document.querySelector("#weather-info"),n=document.querySelector("#city"),o=document.querySelector("#desc"),c=document.querySelector("#deg"),r=document.querySelector("#icon"),i=document.querySelector("#feels"),a=document.querySelector("#wind"),s=document.querySelector("#hum"),u=document.querySelector("input[type=search]"),d="54548de06c18d589b6cb4816609e68c3";async function l(l){if(""!=u.value){l.preventDefault();try{const l=u.value,m=`http://api.openweathermap.org/geo/1.0/direct?q=${l}&limit=5&appid=${d}`,p=await fetch(m,{mode:"cors"});if(!p.ok)throw new Error(`City ${l} not found`);const h=await p.json();!async function(u,l){const m=`https://api.openweathermap.org/data/2.5/weather?lat=${u}&lon=${l}&appid=${d}&units=metric`;try{const u=await fetch(m,{mode:"cors"});(u=>{e.classList.add("visible");const d=u.name;n.textContent=d;const l=u.weather[0].description,m=t.capitalise(l);o.textContent=m;const p=u.main.temp,h=t.getTemp(p);c.textContent=h;(t=>{r.classList.add("visible"),r.src=`https://openweathermap.org/img/wn/${t}@2x.png`})(u.weather[0].icon);const y=u.main.feels_like,w=t.getFeels(y);i.textContent=w;const g=u.wind.speed,f=t.getWind(g);a.textContent=f;const q=u.main.humidity,S=t.getHumidity(q);s.textContent=S})(await u.json())}catch(t){alert(t)}}(h[0].lat,h[0].lon),u.value=""}catch(t){alert(t)}}}document.querySelector("form").addEventListener("submit",(t=>l(t)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,